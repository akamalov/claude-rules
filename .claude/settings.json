{
    "permissions": {
        "defaultMode": "default",
        "disableBypassPermissionsMode": "disable",
        "allow": [
            "Bash",
            "Read",
            "Write",
            "Edit",
            "MultiEdit",
            "Glob",
            "Grep",
            "LS",
            "Task",
            "TodoRead",
            "TodoWrite",
            "WebFetch",
            "WebSearch",
            "Bash(git*)",
            "Bash(docker*)",
            "Bash(kubectl*)",
            "Bash(helm*)",
            "Bash(terraform*)",
            "Bash(ansible*)",
            "Bash(npm*)",
            "Bash(yarn*)",
            "Bash(pip*)",
            "Bash(python*)",
            "Bash(node*)",
            "Bash(curl*)",
            "Bash(wget*)",
            "Bash(make*)",
            "Bash(cargo*)",
            "Bash(go*)",
            "Bash(npx claude-flow *)",
            "Bash(npm run lint)",
            "Bash(npm run test:*)",
            "Bash(npm test *)",
            "Bash(git status)",
            "Bash(git diff *)",
            "Bash(git log *)",
            "Bash(git add *)",
            "Bash(git commit *)",
            "Bash(git push)",
            "Bash(git config *)",
            "Bash(gh *)",
            "Bash(node *)",
            "Bash(which *)",
            "Bash(pwd)",
            "Bash(ls *)"
        ],
        "deny": [
            "Bash(rm -rf /)",
            "Bash(dd*)",
            "Bash(mkfs*)",
            "Bash(shutdown*)",
            "Bash(reboot*)",
            "Bash(passwd*)",
            "Bash(chmod 777*)",
            "NotebookEdit",
            "Bash(curl * | bash)",
            "Bash(wget * | sh)",
            "Bash(eval *)"
        ],
        "additionalDirectories": [
            "/tmp"
        ]
    },
    "hooks": {
        "PreToolUse": [
            {
                "matcher": "Bash",
                "hooks": [
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha hooks pre-command --command \"$CLAUDE_COMMAND\" --validate-safety true --prepare-resources true --predict-outcome true --check-patterns true"
                    },
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha memory store --key \"command/pre/$CLAUDE_TIMESTAMP\" --value \"$CLAUDE_COMMAND\" --namespace \"commands\""
                    }
                ]
            },
            {
                "matcher": "Write|Edit|MultiEdit",
                "hooks": [
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha hooks pre-edit --file \"$CLAUDE_EDITED_FILE\" --auto-assign-agents true --load-context true --analyze-impact true"
                    },
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha memory store --key \"edit/pre/$CLAUDE_EDITED_FILE\" --value \"$CLAUDE_OPERATION_CONTEXT\" --namespace \"edits\""
                    }
                ]
            },
            {
                "matcher": "TodoWrite",
                "hooks": [
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha memory store --key \"todos/$CLAUDE_TIMESTAMP\" --value \"$CLAUDE_TODOS\" --namespace \"tasks\""
                    }
                ]
            }
        ],
        "PostToolUse": [
            {
                "matcher": "Bash",
                "hooks": [
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha hooks post-command --command \"$CLAUDE_COMMAND\" --track-metrics true --store-results true --analyze-performance true"
                    },
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha memory store --key \"command/post/$CLAUDE_TIMESTAMP\" --value \"{\\\"command\\\": \\\"$CLAUDE_COMMAND\\\", \\\"result\\\": \\\"$CLAUDE_RESULT\\\", \\\"duration\\\": $CLAUDE_DURATION}\" --namespace \"commands\""
                    }
                ]
            },
            {
                "matcher": "Write|Edit|MultiEdit",
                "hooks": [
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha hooks post-edit --file \"$CLAUDE_EDITED_FILE\" --format true --update-memory true --train-neural true --analyze-quality true"
                    },
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha memory store --key \"edit/post/$CLAUDE_EDITED_FILE\" --value \"{\\\"changes\\\": $CLAUDE_CHANGES, \\\"quality_score\\\": $CLAUDE_QUALITY_SCORE}\" --namespace \"edits\""
                    },
                    {
                        "type": "command",
                        "command": "test $CLAUDE_CHECKPOINT_DUE = true && git add -A && git commit -m \"ðŸ”„ Checkpoint: $CLAUDE_EDITED_FILE edited\" || true"
                    }
                ]
            },
            {
                "matcher": "Task",
                "hooks": [
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha memory store --key \"task/complete/$CLAUDE_TASK_ID\" --value \"{\\\"task\\\": \\\"$CLAUDE_TASK\\\", \\\"agent\\\": \\\"$CLAUDE_AGENT\\\", \\\"result\\\": \\\"$CLAUDE_RESULT\\\"}\" --namespace \"tasks\""
                    }
                ]
            }
        ],
        "Stop": [
            {
                "hooks": [
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha hooks session-end --generate-summary true --persist-state true --export-metrics true --backup-memory true"
                    },
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha memory backup --namespace \"all\" --destination \".claude/memory-backup-$CLAUDE_SESSION_ID.json\""
                    },
                    {
                        "type": "command",
                        "command": "git add .claude/memory-backup-*.json && git commit -m \"ðŸ§  Session memory backup: $CLAUDE_SESSION_ID\" || true"
                    },
                    {
                        "type": "command",
                        "command": "npx claude-flow@alpha github create-gist --name \"session-learnings-$CLAUDE_SESSION_ID\" --content \"$CLAUDE_SESSION_LEARNINGS\" --private true || true"
                    }
                ]
            }
        ]
    },
    "enableAllProjectMcpServers": true,
    "env": {
        "DISABLE_TELEMETRY": "false",
        "CLAUDE_CODE_MAX_OUTPUT_TOKENS": "8192",
        "BASH_DEFAULT_TIMEOUT_MS": "120000",
        "BASH_MAX_TIMEOUT_MS": "600000",
        "DOCKER_BUILDKIT": "1",
        "BUILDX_NO_DEFAULT_ATTESTATIONS": "1",
        "KUBECONFIG": "/home/akamalov/.kube/config",
        "COMPOSE_DOCKER_CLI_BUILD": "1",
        "COMPOSE_PARALLEL_LIMIT": "10",
        "NODE_ENV": "production",
        "NPM_CONFIG_AUDIT": "false",
        "YARN_ENABLE_TELEMETRY": "0",
        "CLAUDE_FLOW_AUTO_COMMIT": "true",
        "CLAUDE_FLOW_AUTO_PUSH": "false",
        "CLAUDE_FLOW_HOOKS_ENABLED": "true",
        "CLAUDE_FLOW_TELEMETRY_ENABLED": "true",
        "CLAUDE_FLOW_REMOTE_EXECUTION": "true",
        "CLAUDE_FLOW_GITHUB_INTEGRATION": "true",
        "CLAUDE_FLOW_CHECKPOINT_ENABLED": "true",
        "CLAUDE_FLOW_MEMORY_PERSISTENCE": "true",
        "CLAUDE_FLOW_NEURAL_OPTIMIZATION": "true",
        "CLAUDE_FLOW_AUTO_LEARNING": "true"
    },
    "forceLoginMethod": "claudeai",
    "cleanupPeriodDays": 30,
    "includeCoAuthoredBy": true
}
